---
name: check the code builds

on:
  pull_request:
    branches: [ "master" ]


jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        # build targets
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: '386'
          - goos: darwin
            goarch: amd64
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          lfs: true
          fetch-depth: 0
      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version: 1.18
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Build stage
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

        run: |
          # Build frontend assets first
          make -C server frontend
          # For PR builds, use a default version since GITHUB_REF won't have a proper version
          v="dev-$(date +%Y%m%d)-$(git rev-parse --short HEAD)"
          go build -x -v -mod=vendor -ldflags "-X main.version=${v} -w -s" -o "tty-share_${GOOS}-${GOARCH}"

      - name: Upload to artifact storage
        uses: actions/upload-artifact@v4
        with:
          name: tty-share-${{ matrix.goos }}-${{ matrix.goarch }}
          path: tty-share_${{ matrix.goos }}-${{ matrix.goarch }}
          if-no-files-found: error
          # only meant for sharing with the publish job
          retention-days: 1

  publish:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: tty-share-*